import sys
import os
import json
from PySide6.QtWidgets import (QSplitter, QTreeView, QTextEdit, QWidget,
                               QVBoxLayout, QApplication, QMenu,
                               QHBoxLayout, QPushButton, QSpacerItem, QSizePolicy, QFileDialog, QMessageBox)
from PySide6.QtCore import (Qt, QFileSystemWatcher, Signal, QObject, QRect, QSize,
                             QModelIndex)
from PySide6.QtGui import QAction,  QColor, QCursor, QPen, QPainter


from file_editor import FileEditorWindow
from delegates import TreeItemDelegate
from content_handler import STFileTreeModel
from md_file_parser import MarkdownViewer

# ===================================================================
# –ì–†–ê–§–ò–ß–ï–°–ö–ò–ô –ò–ù–¢–ï–†–§–ï–ô–°
# ===================================================================

# –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –ø–∞–Ω–µ–ª–∏
class SidePanelSignals(QObject):
    # –°–∏–≥–Ω–∞–ª –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞ (–ø–µ—Ä–µ–¥–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É)
    file_selected = Signal(str)
    # –°–∏–≥–Ω–∞–ª –ø—Ä–∏ –∏–∑–º–∏–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞(–ø–µ—Ä–µ–¥–∞–µ—Ç –ø—É—Ç—å –∫ –∏–∑–º–µ–Ω–µ–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É)
    file_changed = Signal(str)


# –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
class SidePanel(QWidget):
    def __init__(self, parent=None):

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è QWidget —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
        # - –ë–µ–∑ —Ä–∞–º–∫–∏ (FramelessWindowHint)
        # - –í—Å–µ–≥–¥–∞ –ø–æ–≤–µ—Ä—Ö –¥—Ä—É–≥–∏—Ö –æ–∫–æ–Ω (WindowStaysOnTopHint)
        super().__init__(parent, Qt.FramelessWindowHint | Qt.WindowStaysOnTopHint)


        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–ª—è —Å–∏–≥–Ω–∞–ª–æ–≤
        self.signals = SidePanelSignals()
        self.file_watcher = QFileSystemWatcher()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è
        self.file_watcher.fileChanged.connect(self._on_file_changed)  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–∞
        # –ó–∞–º–µ–Ω—è–µ–º QTextEdit –Ω–∞ MarkdownViewer
        self.markdown_viewer = MarkdownViewer()
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self._init_ui()
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–µ–π
        self._init_position_menu()
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫ –∫—Ä–∞—è–º —ç–∫—Ä–∞–Ω–∞
        self._setup_screen_edge_docking()
        # –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª (—Ö—Ä–∞–Ω–∏—Ç –ø—É—Ç—å)
        self.current_file = None  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

        self._update_menu_checks()

        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        self._load_saved_files()

        # –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
        self.resize_area = 5  # –®–∏—Ä–∏–Ω–∞ –æ–±–ª–∞—Å—Ç–∏ –∑–∞—Ö–≤–∞—Ç–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
        self.resize_direction = None
        self.drag_start_position = None
        self.drag_window_position = None
        self.drag_window_size = None

        # –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –æ–∫–Ω–æ –±—É–¥–µ—Ç –≤–∏–¥–∏–º—ã–º
        self.setAttribute(Qt.WA_ShowWithoutActivating)
        self.show()

    # –ú–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    def _init_ui(self):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —à–∏—Ä–∏–Ω—É –ø–∞–Ω–µ–ª–∏
        self.setMinimumWidth(300)

        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π layout
        main_layout = QVBoxLayout(self)
        # –£–±–∏—Ä–∞–µ–º –æ—Ç—Å—Ç—É–ø—ã —É layout
        main_layout.setContentsMargins(0, 0, 0, 0)

        # –ü–∞–Ω–µ–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–∞
        self.title_bar = QWidget()
        title_layout = QHBoxLayout(self.title_bar)
        title_layout.setContentsMargins(5, 2, 5, 2)

        # –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.title_bar = QWidget()
        # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π layout –¥–ª—è –ø–∞–Ω–µ–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title_layout = QHBoxLayout(self.title_bar)
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–±–æ–ª—å—à–∏–µ –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è –ø–∞–Ω–µ–ª–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞
        title_layout.setContentsMargins(5, 2, 5, 2)

        # –ö–Ω–æ–ø–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        self.minimize_btn = QPushButton("‚Äî")
        # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏
        self.minimize_btn.setFixedSize(20, 20)
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –æ–∫–Ω–∞
        self.minimize_btn.clicked.connect(self.showMinimized)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        self.close_btn = QPushButton("√ó")
        # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏
        self.close_btn.setFixedSize(20, 20)
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
        self.close_btn.clicked.connect(self.close)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
        self.load_btn = QPushButton("üìÇ")
        self.load_btn.setFixedSize(20, 20)
        self.load_btn.clicked.connect(self._load_st_files)

        # –í —Ä–∞–∑–¥–µ–ª–µ —Å –¥—Ä—É–≥–∏–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ (—Ä—è–¥–æ–º —Å load_btn)
        self.edit_btn = QPushButton("‚úèÔ∏è")  # –ò–∫–æ–Ω–∫–∞ –∫–∞—Ä–∞–Ω–¥–∞—à–∞
        self.edit_btn.setFixedSize(20, 20)
        self.edit_btn.setToolTip("–†–µ–¥–∞–∫—Ç–æ—Ä —Ñ–∞–π–ª–æ–≤")
        self.edit_btn.clicked.connect(self._open_editor)

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        self.collapse_btn = QPushButton("‚àí")
        self.collapse_btn.setFixedSize(20, 20)
        self.collapse_btn.setToolTip("–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ")
        self.collapse_btn.clicked.connect(self.collapse_all)

        self.expand_btn = QPushButton("+")
        self.expand_btn.setFixedSize(20, 20)
        self.expand_btn.setToolTip("–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ")
        self.expand_btn.clicked.connect(self.expand_all)

        # –†–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —ç–ª–µ–º–µ–Ω—Ç –º–µ–∂–¥—É –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤ layout –∑–∞–≥–æ–ª–æ–≤–∫–∞:
        # 1. –ö–Ω–æ–ø–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        title_layout.addWidget(self.minimize_btn)
        # 2 –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
        title_layout.addWidget(self.load_btn)
        # 3 –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        title_layout.addWidget(self.collapse_btn)
        # 4 –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
        title_layout.addWidget(self.expand_btn)
        # 7. –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤ title_layout –ø–æ—Å–ª–µ load_btn
        title_layout.addWidget(self.edit_btn)
        # 5. –†–∞—Å—Ç—è–≥–∏–≤–∞—é—â–∏–π—Å—è —ç–ª–µ–º–µ–Ω—Ç (–ø—É—Å—Ç–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ)
        title_layout.addSpacerItem(QSpacerItem(40, 20, QSizePolicy.Expanding, QSizePolicy.Minimum))
        # 6. –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è
        title_layout.addWidget(self.close_btn)



        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–Ω–µ–ª—å –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout.addWidget(self.title_bar)

        # –°–æ–∑–¥–∞–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–µ–π
        self.splitter = QSplitter(Qt.Vertical)

        self.splitter.setSizes([300, 100])  # 300px –¥–ª—è –¥–µ—Ä–µ–≤–∞, 100px –¥–ª—è —Ç–µ–∫—Å—Ç–∞
        self.splitter.setHandleWidth(5)  # –®–∏—Ä–∏–Ω–∞ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
        self.splitter.setStyleSheet("QSplitter::handle { background: #ccc; }")

        # –°–æ–∑–¥–∞–µ–º –¥–µ—Ä–µ–≤–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
        self.tree_view = QTreeView()
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —É –¥–µ—Ä–µ–≤–∞
        self.tree_view.setHeaderHidden(False)
        self.tree_view.setIndentation(10)  # –£–≤–µ–ª–∏—á—å—Ç–µ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
        self.tree_view.setAnimated(True)  # –ê–Ω–∏–º–∞—Ü–∏—è —Ä–∞—Å–∫—Ä—ã—Ç–∏—è
        self.tree_view.setUniformRowHeights(True)
        self.tree_view.setRootIsDecorated(True)  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–∫–æ—Ä –¥–ª—è –∫–æ—Ä–Ω–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        self.tree_view.setExpandsOnDoubleClick(True)  # –í–∫–ª—é—á–∞–µ–º —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –ø–æ –¥–≤–æ–π–Ω–æ–º—É –∫–ª–∏–∫—É
        self.tree_view.setSortingEnabled(False)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–ª–µ–≥–∞—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –Ω–∞ tree_view
        self.delegate = TreeItemDelegate(self.tree_view)
        self.tree_view.setItemDelegate(self.delegate)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞
        self.tree_view.doubleClicked.connect(self._on_tree_item_double_clicked)

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–ª–µ–≥–∞—Ç
        # self.tree_view.setItemDelegate(TreeItemDelegate(self.tree_view))
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è –¥–µ—Ä–µ–≤–∞
        self.tree_view.setStyleSheet("""
            QTreeView {
                background-color: white;
                border: 1px solid #ddd;
            }
            QTreeView::item {
                padding: 2px;
                margin: 0px;
                height: 20px;
            }
            /* –£–±–∏—Ä–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∏ */
            QTreeView::branch {
                background: transparent;
                border: 0px;
            }
            QTreeView::branch:has-siblings:!adjoins-item {
                border-image: none;
                image: none;
            }
            QTreeView::branch:has-siblings:adjoins-item {
                border-image: none;
                image: none;
            }
            QTreeView::branch:!has-children:!has-siblings:adjoins-item {
                border-image: none;
                image: none;
            }
            QTreeView::branch:has-children:!has-siblings:closed,
            QTreeView::branch:closed:has-children:has-siblings {
                border-image: none;
                image: none;
            }
            QTreeView::branch:open:has-children:!has-siblings,
            QTreeView::branch:open:has-children:has-siblings {
                border-image: none;
                image: none;
            }
        """)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç–∞–º –¥–µ—Ä–µ–≤–∞
        self.tree_view.clicked.connect(self._on_tree_item_clicked)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Ñ–∞–π–ª–æ–≤
        #self.content_view = QTextEdit()
        # –î–µ–ª–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è
        #self.content_view.setReadOnly(True)


        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö
        self.tree_model = STFileTreeModel()
        self.tree_view.setModel(self.tree_model)
        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–¥–∂–µ—Ç—ã –≤ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å:
        # 1. –î–µ—Ä–µ–≤–æ —Ñ–∞–π–ª–æ–≤ (–≤–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å)
        self.splitter.addWidget(self.tree_view)
        # 2. –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ (–Ω–∏–∂–Ω—è—è —á–∞—Å—Ç—å)
        #self.splitter.addWidget(self.content_view)
        self.splitter.addWidget(self.tree_view)
        self.splitter.addWidget(self.markdown_viewer)
        # 3. –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π layout
        main_layout.addWidget(self.splitter)

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –¥–µ—Ä–µ–≤–∞
        self.tree_view.setContextMenuPolicy(Qt.CustomContextMenu)
        self.tree_view.customContextMenuRequested.connect(self._show_tree_context_menu)


    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—è –∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ st
    def _get_save_path(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è"""
        return os.path.join(os.path.dirname(__file__), "saved_files.json")

    def _save_files_to_json(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ JSON"""
        save_path = self._get_save_path()
        files = []

        # –°–æ–±–∏—Ä–∞–µ–º –ø—É—Ç–∏ –≤—Å–µ—Ö –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–∫–∞–∫ st, —Ç–∞–∫ –∏ md)
        for i in range(len(self.tree_model.root_item.child_items)):
            item = self.tree_model.root_item.child_items[i]
            if item.item_data[1] in ["file", "markdown"]:  # –ò–∑–º–µ–Ω–µ–Ω–æ —É—Å–ª–æ–≤–∏–µ
                files.append({
                    "path": item.item_data[2],
                    "type": item.item_data[1]  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
                })

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ JSON
        with open(save_path, 'w', encoding='utf-8') as f:
            json.dump(files, f, ensure_ascii=False, indent=4)

    def _load_saved_files(self):
        """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏–∑ JSON"""
        save_path = self._get_save_path()
        if not os.path.exists(save_path):
            return

        try:
            with open(save_path, 'r', encoding='utf-8') as f:
                files = json.load(f)
                for file_info in files:
                    file_path = file_info["path"]
                    file_type = file_info.get("type", "file")

                    if os.path.exists(file_path):
                        if file_type == "file":
                            self.tree_model.add_file(file_path)
                        elif file_type == "markdown":
                            self.tree_model.add_markdown_file(file_path)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥

            self.tree_view.expandAll()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {e}")

    def _remove_file_from_json(self, file_path):
        """–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞"""
        save_path = self._get_save_path()
        if not os.path.exists(save_path):
            return

        try:
            with open(save_path, 'r', encoding='utf-8') as f:
                files = json.load(f)

            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∏–∑ —Å–ø–∏—Å–∫–∞ (—Ç–µ–ø–µ—Ä—å –∏—â–µ–º –ø–æ path –≤ —Å–ª–æ–≤–∞—Ä–µ)
            files = [f for f in files if f["path"] != file_path]

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
            with open(save_path, 'w', encoding='utf-8') as f:
                json.dump(files, f, ensure_ascii=False, indent=4)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö: {e}")

    def _add_markdown_file(self, file_path):
        """–î–æ–±–∞–≤–ª—è–µ—Ç Markdown —Ñ–∞–π–ª –≤ –º–æ–¥–µ–ª—å"""
        if not os.path.exists(file_path):
            print(f"Markdown file not found: {file_path}")
        return

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ –º–æ–¥–µ–ª–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è MD —Ñ–∞–π–ª–∞
        self.tree_model.add_markdown_file(file_path)
        print(f"Markdown file added: {file_path}")



    def _load_st_files(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ ST-—Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ –¥–∏–∞–ª–æ–≥"""
        files, _ = QFileDialog.getOpenFileNames(
            self,  "–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª—ã", "", "ST Files (*.st);;Markdown Files (*.md)"
        )
        for file in files:
            print(f"–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞: {file}")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
            if file.endswith('.st'):
                self.tree_model.add_file(file)
            elif file.endswith('.md'):
                self.tree_model.add_markdown_file(file)
            self._save_files_to_json()

        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∞
        self.tree_view.expandAll()

    def _on_tree_item_clicked(self, index):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –¥–µ—Ä–µ–≤–∞"""
        item = index.internalPointer()
        if not item:
            return

        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        #self.content_view.clear()

        # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        self.markdown_viewer.set_content("")  # –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ MarkdownViewer

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        if item.item_data[1] == 'template':
            #self.content_view.setPlainText(item.item_data[2])
            self.markdown_viewer.set_content(item.item_data[2])
            self.markdown_viewer.set_view_mode("text") # <-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤

        elif item.item_data[1] == 'file':  # <-- –û–±—Ä–∞–±–æ—Ç–∫–∞ ST —Ñ–∞–π–ª–æ–≤
            file_path = item.item_data[2]
            try:
                if os.path.exists(file_path):
                    with open(file_path, 'r', encoding='utf-8') as f:
                        content = f.read()
                        self.markdown_viewer.set_content(content)
                        self.markdown_viewer.set_view_mode("text")  # <-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –¥–ª—è ST —Ñ–∞–π–ª–æ–≤
                else:
                    self.markdown_viewer.set_content(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
            except Exception as e:
                self.markdown_viewer.set_content(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {str(e)}")


        elif item.item_data[1] == 'markdown':
            file_path = item.item_data[2]
            try:
                if os.path.exists(file_path):
                    with open(file_path, 'r', encoding='utf-8') as f:
                        content = f.read()
                        #self.content_view.setMarkdown(content)
                        self.markdown_viewer.set_content(content)
                        self.markdown_viewer.set_view_mode("markdown")  # <-- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º markdown —Ä–µ–∂–∏–º –¥–ª—è MD —Ñ–∞–π–ª–æ–≤
                else:
                    #self.content_view.setPlainText(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
                    self.markdown_viewer.set_content(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")
            except Exception as e:
                #self.content_view.setPlainText(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {str(e)}")
                self.markdown_viewer.set_content(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: {str(e)}")

        # –î–ª—è —Ñ–∞–π–ª–æ–≤ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å
        if item.item_data[1] in ['file', 'markdown']:
            file_path = item.item_data[2]
            self.current_file = file_path
            self.signals.file_selected.emit(file_path)

            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å —Ñ–∞–π–ª–æ–≤
            if self.file_watcher.files():
                self.file_watcher.removePaths(self.file_watcher.files())
            self.file_watcher.addPath(file_path)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏ (–¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –æ–∫–Ω–∞)
    def mousePressEvent(self, event):
        if event.button() == Qt.LeftButton:
            if self.dock_position == "float":
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –∫—É—Ä—Å–æ—Ä –≤ –æ–±–ª–∞—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
                rect = self.rect()
                self.resize_direction = self._get_resize_direction(event.position().toPoint(), rect)

                if self.resize_direction:
                    # –ù–∞—á–∏–Ω–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
                    self.drag_start_position = event.globalPosition().toPoint()
                    self.drag_window_position = self.pos()
                    self.drag_window_size = self.size()
                    event.accept()
                    return

            # –û–±—ã—á–Ω–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –æ–∫–Ω–∞
            if event.position().y() < 30:  # –¢–æ–ª—å–∫–æ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ
                self.drag_start_position = event.globalPosition().toPoint()
                self.drag_window_position = self.pos()
                event.accept()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –º—ã—à–∏ (–¥–ª—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –æ–∫–Ω–∞)
    def mouseMoveEvent(self, event):
        if self.dock_position == "float" and hasattr(self, 'drag_start_position'):
            if self.resize_direction:
                # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
                delta = event.globalPosition().toPoint() - self.drag_start_position
                new_rect = QRect(self.drag_window_position, self.drag_window_size)

                if "left" in self.resize_direction:
                    new_rect.setLeft(new_rect.left() + delta.x())
                if "right" in self.resize_direction:
                    new_rect.setRight(new_rect.right() + delta.x())
                if "top" in self.resize_direction:
                    new_rect.setTop(new_rect.top() + delta.y())
                if "bottom" in self.resize_direction:
                    new_rect.setBottom(new_rect.bottom() + delta.y())

                # –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ–∑–∏—Ü–∏—é
                if new_rect.width() > self.minimumWidth() and new_rect.height() > self.minimumHeight():
                    self.setGeometry(new_rect)
                event.accept()
            # –ï—Å–ª–∏ –Ω–∞—á–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
            elif hasattr(self, 'drag_start_position'):
                # –í—ã—á–∏—Å–ª—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞
                delta = event.globalPosition().toPoint() - self.drag_start_position
                # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –æ–∫–Ω–æ –Ω–∞ –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ
                self.move(self.drag_window_position + delta)
                # –ü—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
                event.accept()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏ (–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è)
    def mouseReleaseEvent(self, event):
        # –ï—Å–ª–∏ –±—ã–ª–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
        if hasattr(self, 'drag_start_position'):
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            del self.drag_start_position
            self.resize_direction = None
            # –ü—Ä–∏–Ω–∏–º–∞–µ–º —Å–æ–±—ã—Ç–∏–µ
            event.accept()

    def _get_resize_direction(self, pos, rect):
        """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞"""
        directions = []
        if pos.x() <= self.resize_area:
            directions.append("left")
        elif pos.x() >= rect.width() - self.resize_area:
            directions.append("right")
        if pos.y() <= self.resize_area:
            directions.append("top")
        elif pos.y() >= rect.height() - self.resize_area:
            directions.append("bottom")

        return "_".join(directions) if directions else None

    def paintEvent(self, event):
        super().paintEvent(event)
        if self.dock_position == "float":
            # –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –≥—Ä–∞–Ω–∏—Ü –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –æ–±–ª–∞—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
            painter = QPainter(self)
            painter.setPen(QPen(QColor(100, 100, 100, 100), self.resize_area))
            painter.drawRect(self.rect())

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    def _on_file_changed(self, path):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞"""
        # –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–π —Ñ–∞–π–ª - —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
        if path == self.current_file:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞
            self.signals.file_changed.emit(path)

    # –ú–µ—Ç–æ–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –¥–µ—Ä–µ–≤–æ
    def set_tree_model(self, model):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–¥–µ–ª–∏ –¥–ª—è –¥–µ—Ä–µ–≤–∞"""
        self.tree_view.setModel(model)
        # –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —É–∑–ª—ã –¥–µ—Ä–µ–≤–∞
        self.tree_view.expandAll()

    # –ú–µ—Ç–æ–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    '''def set_content(self, text):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ"""
        self.content_view.setPlainText(text)
    '''

    # –ú–µ—Ç–æ–¥ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Markdown —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    '''def set_markdown_content(self, markdown_text):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Markdown —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ"""
        self.content_view.setMarkdown(markdown_text)
    '''

    # –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø–∞–Ω–µ–ª–∏
    def clear(self):
        """–û—á–∏—Å—Ç–∫–∞ –ø–∞–Ω–µ–ª–∏"""
        # –û—á–∏—â–∞–µ–º –º–æ–¥–µ–ª—å –¥–µ—Ä–µ–≤–∞
        self.tree_view.setModel(None)
        # –û—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
        self.content_view.clear()
        # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞–±–ª—é–¥–∞–µ–º—ã–µ —Ñ–∞–π–ª—ã, –æ—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫
        if self.file_watcher.files():
            self.file_watcher.removePaths(self.file_watcher.files())
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
        self.current_file = None

    # –ú–µ—Ç–æ–¥ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    def remove_file(self, file_path):
        """–£–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª –∏–∑ –¥–µ—Ä–µ–≤–∞ –∏ –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        # –ù–∞—Ö–æ–¥–∏–º –∏ —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∏–∑ –º–æ–¥–µ–ª–∏
        for i in range(len(self.tree_model.root_item.child_items)):
            item = self.tree_model.root_item.child_items[i]
            if item.item_data[2] == file_path:
                self.tree_model.beginRemoveRows(QModelIndex(), i, i)
                self.tree_model.root_item.child_items.pop(i)
                self.tree_model.endRemoveRows()
                break
        # –£–¥–∞–ª—è–µ–º –∏–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        self._remove_file_from_json(file_path)

        # –ï—Å–ª–∏ —É–¥–∞–ª—è–µ–º—ã–π —Ñ–∞–π–ª –±—ã–ª —Ç–µ–∫—É—â–∏–º, –æ—á–∏—â–∞–µ–º –ø—Ä–æ—Å–º–æ—Ç—Ä
        if self.current_file == file_path:
            self.content_view.clear()
            self.current_file = None

    def _show_tree_context_menu(self, pos):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –¥–µ—Ä–µ–≤–∞ —Ñ–∞–π–ª–æ–≤
            Args:
            pos: QPoint - –ø–æ–∑–∏—Ü–∏—è –∫—É—Ä—Å–æ—Ä–∞ –º—ã—à–∏ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
        """
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–µ—Ä–µ–≤–∞ –ø–æ –ø–æ–∑–∏—Ü–∏–∏ –∫–ª–∏–∫–∞
        index = self.tree_view.indexAt(pos)
        # –ï—Å–ª–∏ –∏–Ω–¥–µ–∫—Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π (–∫–ª–∏–∫ –º–∏–º–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤), –≤—ã—Ö–æ–¥–∏–º –∏–∑ –º–µ—Ç–æ–¥–∞
        if not index.isValid():
            return

        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–µ—Ä–µ–≤–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É
        item = index.internalPointer()

        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
        menu = QMenu(self)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–∞ (–Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω —Ñ–∞–π–ª–æ–º)
        if item.item_data[1] != "file":
            # –î–µ–π—Å—Ç–≤–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
            remove_action = QAction("–£–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞", self)
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
            remove_action.triggered.connect(lambda: self.remove_file(item.item_data[2]))
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é
            menu.addAction(remove_action)
        # –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ø–∫–æ–π
        elif item.item_data[1] == "folder":
            # –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –ø–∞–ø–æ–∫
            expand_action = QAction("–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å", self)
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏
            expand_action.triggered.connect(lambda: self.tree_view.expand(index))
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é
            menu.addAction(expand_action)

            # –°–æ–∑–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ "–°–≤–µ—Ä–Ω—É—Ç—å"
            collapse_action = QAction("–°–≤–µ—Ä–Ω—É—Ç—å", self)
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏
            collapse_action.triggered.connect(lambda: self.tree_view.collapse(index))
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é
            menu.addAction(collapse_action)

            # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –≤ –º–µ–Ω—é
            menu.addSeparator()

            # –°–æ–∑–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ"
            expand_all_action = QAction("–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ", self)
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
            expand_all_action.triggered.connect(lambda: self._expand_recursive(index))
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é
            menu.addAction(expand_all_action)

            # –°–æ–∑–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ "–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ"
            collapse_all_action = QAction("–°–≤–µ—Ä–Ω—É—Ç—å –≤—Å–µ –≤–ª–æ–∂–µ–Ω–Ω—ã–µ", self)
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è
            collapse_all_action.triggered.connect(lambda: self._collapse_recursive(index))
            # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é
            menu.addAction(collapse_all_action)
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –≤ –ø–æ–∑–∏—Ü–∏–∏ –∫—É—Ä—Å–æ—Ä–∞
        menu.exec(self.tree_view.viewport().mapToGlobal(pos))

    # –ú–µ—Ç–æ–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫ –∫—Ä–∞—è–º —ç–∫—Ä–∞–Ω–∞
    def _setup_screen_edge_docking(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫ –∫—Ä–∞—è–º —ç–∫—Ä–∞–Ω–∞"""
        # –ü–æ–∑–∏—Ü–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Å–ø—Ä–∞–≤–∞
        self.dock_position = "right"  # left/right/float
        # –û—Ç—Å—Ç—É–ø –æ—Ç –∫—Ä–∞—è —ç–∫—Ä–∞–Ω–∞
        self.dock_margin = 5

        self.setWindowFlags(self.windowFlags() & ~Qt.WindowStaysOnTopHint) # <- –û–¢–ö–õ–Æ–ß–ê–ï–ú –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö –æ–∫–æ–Ω
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é
        self.update_dock_position()
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å –æ–∫–Ω–∞
        self.setWindowOpacity(0.9)

    # –ú–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –ø–∞–Ω–µ–ª–∏
    def update_dock_position(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫—Ä–∞—è —ç–∫—Ä–∞–Ω–∞"""
        # –ü–æ–ª—É—á–∞–µ–º –≥–µ–æ–º–µ—Ç—Ä–∏—é —ç–∫—Ä–∞–Ω–∞
        screen = QApplication.primaryScreen().availableGeometry()
        # –ï—Å–ª–∏ –ø–∞–Ω–µ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ª–µ–≤–∞
        if self.dock_position == "left":
            self.setGeometry(QRect(
                screen.left() + self.dock_margin,  # X –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞
                screen.top(),  # Y –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞
                300,  # –®–∏—Ä–∏–Ω–∞
                screen.height()  # –í—ã—Å–æ—Ç–∞
            ))
            self.setFixedWidth(300)  # –§–∏–∫—Å–∏—Ä—É–µ–º —à–∏—Ä–∏–Ω—É –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
            self.setFixedHeight(screen.height())  # –§–∏–∫—Å–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É
        # –ï—Å–ª–∏ –ø–∞–Ω–µ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å–ø—Ä–∞–≤–∞
        elif self.dock_position == "right":
            self.setGeometry(QRect(
                screen.right() - 300 - self.dock_margin,  # X –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞
                screen.top(),  # Y –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞
                300,  # –®–∏—Ä–∏–Ω–∞
                screen.height()  # –í—ã—Å–æ—Ç–∞
            ))
            self.setFixedWidth(300)  # –§–∏–∫—Å–∏—Ä—É–µ–º —à–∏—Ä–∏–Ω—É –≤ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ
            self.setFixedHeight(screen.height())  # –§–∏–∫—Å–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É
        # –î–ª—è —Ä–µ–∂–∏–º–∞ float –Ω–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
        elif self.dock_position == "float":
            self.setMinimumSize(200, 200)
            self.setMaximumSize(16777215, 16777215)
            self.setFixedSize(QSize())  # –°–Ω–∏–º–∞–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã

    # –ú–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    def _init_position_menu(self):
        # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        self.position_menu = QMenu("–ü–æ–∑–∏—Ü–∏—è –ø–∞–Ω–µ–ª–∏", self)

        # –°–æ–∑–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ "–ó–∞–∫—Ä–µ–ø–∏—Ç—å —Å–ª–µ–≤–∞"
        self.pin_left_action = QAction("–ó–∞–∫—Ä–µ–ø–∏—Ç—å —Å–ª–µ–≤–∞", self, checkable=True)
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        self.pin_left_action.triggered.connect(self._dock_to_left)

        # –°–æ–∑–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ "–ó–∞–∫—Ä–µ–ø–∏—Ç—å —Å–ø—Ä–∞–≤–∞"
        self.pin_right_action = QAction("–ó–∞–∫—Ä–µ–ø–∏—Ç—å —Å–ø—Ä–∞–≤–∞", self, checkable=True)
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        self.pin_right_action.triggered.connect(self._dock_to_right)

        # –°–æ–∑–¥–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ "–°–≤–æ–±–æ–¥–Ω–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ"
        self.float_action = QAction("–°–≤–æ–±–æ–¥–Ω–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ", self, checkable=True)
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        self.float_action.triggered.connect(self._enable_floating)

        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –≤ –º–µ–Ω—é
        self.position_menu.addActions([self.pin_left_action, self.pin_right_action, self.float_action])
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
        self.setContextMenuPolicy(Qt.CustomContextMenu)
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
        self.customContextMenuRequested.connect(self.show_context_menu)

    # –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ —Å–ª–µ–≤–∞
    def _dock_to_left(self):
        self.dock_position = "left"
        self.update_dock_position()
        self._update_menu_checks()


    # –ú–µ—Ç–æ–¥ –¥–ª—è –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ —Å–ø—Ä–∞–≤–∞
    def _dock_to_right(self):
        self.dock_position = "right"
        self.update_dock_position()
        self._update_menu_checks()



    # –ú–µ—Ç–æ–¥ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è
    def _enable_floating(self):
        self.dock_position = "float"
        self.setWindowFlags(self.windowFlags() | Qt.WindowStaysOnTopHint)  # <- –í–ö–õ–Æ–ß–ê–ï–ú –ø–æ–≤–µ—Ä—Ö –æ–∫–æ–Ω
        self.show()
        #self.update_dock_position()  # –û–±–Ω–æ–≤–ª—è–µ–º –≥–µ–æ–º–µ—Ç—Ä–∏—é
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ–∑–∏—Ü–∏—é
        screen = QApplication.primaryScreen().availableGeometry()
        self.setGeometry(QRect(
            screen.right() - 350,  # X –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ (–Ω–µ–º–Ω–æ–≥–æ –ª–µ–≤–µ–µ –ø—Ä–∞–≤–æ–≥–æ –∫—Ä–∞—è)
            screen.top() + 100,  # Y –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ (–Ω–µ–º–Ω–æ–≥–æ –Ω–∏–∂–µ –≤–µ—Ä—Ö–Ω–µ–≥–æ –∫—Ä–∞—è)
            300,  # –®–∏—Ä–∏–Ω–∞
            screen.height() - 200  # –í—ã—Å–æ—Ç–∞ (–º–µ–Ω—å—à–µ –≤—ã—Å–æ—Ç—ã —ç–∫—Ä–∞–Ω–∞)
        ))
        self._update_menu_checks()

    # –ú–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
    def _update_menu_checks(self):
        self.pin_left_action.setChecked(self.dock_position == "left")
        self.pin_right_action.setChecked(self.dock_position == "right")
        self.float_action.setChecked(self.dock_position == "float")

    # –ú–µ—Ç–æ–¥ –ø–æ–∫–∞–∑–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
    def show_context_menu(self, pos):
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
        self.position_menu.exec(self.mapToGlobal(pos))

    # –î–æ–±–∞–≤–ª—è–µ–º  –º–µ—Ç–æ–¥—ã —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ/—Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–µ:
    def collapse_all(self):
        """–°–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –≤—Å–µ —É–∑–ª—ã –¥–µ—Ä–µ–≤–∞ (—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ)"""
        root = self.tree_model.root_item
        for i in range(len(root.child_items)):
            index = self.tree_model.index(i, 0, QModelIndex())
            self._collapse_recursive(index)

    def expand_all(self):
        """–†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –≤—Å–µ —É–∑–ª—ã –¥–µ—Ä–µ–≤–∞ (—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ)"""
        root = self.tree_model.root_item
        for i in range(len(root.child_items)):
            index = self.tree_model.index(i, 0, QModelIndex())
            self._expand_recursive(index)

    def _on_tree_item_double_clicked(self, index):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–æ–π–Ω–æ–≥–æ –∫–ª–∏–∫–∞ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –¥–µ—Ä–µ–≤–∞"""
        if not index.isValid():
            return

        item = index.internalPointer()
        if not item:
            return

        if item.type == "folder":
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –Ω–∞ –∫–Ω–æ–ø–∫–µ
            pos = self.tree_view.viewport().mapFromGlobal(QCursor.pos())
            button_rect = QRect(self.tree_view.visualRect(index).left(),
                                self.tree_view.visualRect(index).top(),
                                20,
                                self.tree_view.visualRect(index).height())
            if not button_rect.contains(pos):
                if self.tree_view.isExpanded(index):
                    self.tree_view.collapse(index)
                else:
                    self.tree_view.expand(index)

    def _expand_recursive(self, index):
        """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø–∞–ø–∫—É –∏ –≤—Å–µ –ø–æ–¥–ø–∞–ø–∫–∏"""
        if not index.isValid():
            return

        self.tree_view.expand(index)
        model = index.model()
        for i in range(model.rowCount(index)):
            child_index = model.index(i, 0, index)
            if model.is_folder(child_index):
                self._expand_recursive(child_index)

    def _collapse_recursive(self, index):
        """–†–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç –ø–∞–ø–∫—É –∏ –≤—Å–µ –ø–æ–¥–ø–∞–ø–∫–∏"""
        self.tree_view.collapse(index)
        model = index.model()
        for i in range(model.rowCount(index)):
            child_index = model.index(i, 0, index)
            if model.is_folder(child_index):
                self._collapse_recursive(child_index)

    def hasChildren(self, parent=QModelIndex()):
        """–ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–æ–≤ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è"""
        if not parent.isValid():
            return len(self.root_item.child_items) > 0
        item = parent.internalPointer()
        return len(item.child_items) > 0

    def _open_editor(self):
        """–û—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ —Ñ–∞–π–ª–∞"""
        if not hasattr(self, 'editor_window'):
            self.editor_window = FileEditorWindow(self)
            # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–∏–≥–Ω–∞–ª—ã —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –∫ –ø–∞–Ω–µ–ª–∏
            self.editor_window.file_created.connect(self._on_file_created)
        self.editor_window.show()

    def _on_file_created(self, file_path):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–∞ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞"""
        try:
            if file_path.endswith('.st'):
                self.tree_model.add_file(file_path)
            elif file_path.endswith('.md'):
                self.tree_model.add_markdown_file(file_path)
            self._save_files_to_json()
            self.tree_view.expandAll()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –≤ –¥–µ—Ä–µ–≤–æ: {e}")
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å QMessageBox –¥–ª—è –ø–æ–∫–∞–∑–∞ –æ—à–∏–±–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª –≤ –¥–µ—Ä–µ–≤–æ: {str(e)}")

# ===================================================================
# –ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ===================================================================

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    app = QApplication(sys.argv)

    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    panel = SidePanel()
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
    panel.setWindowTitle("–°–∏—Å—Ç–µ–º–Ω–∞—è –±–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å")

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å
    panel.show()
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π
    sys.exit(app.exec())