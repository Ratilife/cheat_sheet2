class TreeManager:
    """
        Класс для управления деревом (разворачиванием/сворачиванием узлов).
        Обеспечивает функциональность работы с древовидными структурами в GUI.
    """
    def __init__(self, tree_view):
        """
                Инициализация менеджера дерева.

                Args:
                    tree_view: Объект представления дерева (QTreeView или аналогичный),
                              с которым будет работать менеджер.
        """
        self.tree_view = tree_view          # Сохраняем ссылку на виджет дерева


    def expand_all(self):
        """
                Разворачивает все узлы дерева.
                Использует встроенную функцию expandAll() виджета дерева.
        """
        self.tree_view.expandAll()   # Вызываем метод разворачивания всех узлов

    def collapse_all(self):
        """
                Сворачивает все узлы дерева.
                Использует встроенную функцию collapseAll() виджета дерева.
        """
        self.tree_view.collapseAll()    # Вызываем метод сворачивания всех узлов

    def expand_recursive(self, index):
        """
                Рекурсивно разворачивает узел и все его подузлы (только для папок).

                Args:
                    index: Индекс модели, представляющий узел, который нужно развернуть.
        """
        if not index.isValid():                     # Проверяем, является ли индекс допустимым
            return                                  # Если индекс недопустим, прекращаем выполнение
        self.tree_view.expand(index)                # Разворачиваем текущий узел
        model = index.model()                       # Получаем модель данных для текущего индекса
        # Рекурсивно обрабатываем все дочерние элементы
        for i in range(model.rowCount(index)):      # Для каждого дочернего элемента
            child_index = model.index(i, 0, index)  # Получаем индекс дочернего элемента
            # Проверяем, является ли дочерний элемент папкой
            if model.is_folder(child_index):
                self.expand_recursive(child_index)  # Рекурсивный вызов для папок

    def collapse_recursive(self, index):
        """
                Рекурсивно сворачивает узел и все его подузлы (только для папок).

                Args:
                    index: Индекс модели, представляющий узел, который нужно свернуть.
        """
        self.tree_view.collapse(index)               # Сворачиваем текущий узел
        model = index.model()                        # Получаем модель данных для текущего индекса
        # Рекурсивно обрабатываем все дочерние элементы
        for i in range(model.rowCount(index)):       # Для каждого дочернего элемента
            child_index = model.index(i, 0, index)   # Получаем индекс дочернего элемента
            # Проверяем, является ли дочерний элемент папкой
            if model.is_folder(child_index):
                self.collapse_recursive(child_index) # Рекурсивный вызов для папок